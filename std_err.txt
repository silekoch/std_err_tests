Bootstrapping:
1. Predict a (test) set of n samples
2. Randomly select subset of n predictions, i.e. draw with replacement
3. Compute an estimate xi of your performance measurement on that subset
4. Repeat m times
5. Compute StdDev and StdErr for x

        [a, b, c, d, e] <- [a, b, c, d, e, f, g, h, i, ..................]
        [c, f, e, d, z] <- [a, b, c, d, e, f, g, h, i, ..................]
y_hat = [1, 1, 0, 1, 0]
y =     [0, 1, 0, 1, 1]
perf = 0.7
len(test_set) = 5 = n

bootstrap_1 = [a, a, a, d, e] -> perf_1
bootstrap_2 = [d, a, a, d, e] -> perf_2
...
bootstrap_m = [b, c, a, e, e] -> perf_m
m >> n, m>>10000

stderr = std([perf_1, ..., perf_m])
ci = 1.96 * stderr (95%)

opt1 0.9 +- 0.1
opt2 0.8 +- 0.1
ci(n)

population = testset + valset + trainset + den ganzen rest
std(population) = sqrt(sum((x_i - x_mean)**2)/n)
stderr = std(population) / sqrt(n)

sample = [1, 2, 1, 3, 4] 
sample_std = 
population = alle noten von der schule
